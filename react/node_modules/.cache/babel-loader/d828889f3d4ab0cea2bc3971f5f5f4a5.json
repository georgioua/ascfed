{"ast":null,"code":"var _jsxFileName = \"/Users/ageorgiou/Projects/ascfed/react/src/PriceChangeForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nfunction getFormattedAmount(amount) {\n  // Format price details and detect zero decimal currencies\n  let amountToFormat = amount;\n  let numberFormat = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    currencyDisplay: 'symbol'\n  });\n  let parts = numberFormat.formatToParts(amountToFormat);\n  let zeroDecimalCurrency = true;\n\n  for (let part of parts) {\n    if (part.type === 'decimal') {\n      zeroDecimalCurrency = false;\n    }\n  }\n\n  amountToFormat = zeroDecimalCurrency ? amount : amount / 100;\n  let formattedAmount = numberFormat.format(amountToFormat);\n  console.log(formattedAmount);\n  return formattedAmount;\n}\n\nfunction getDateStringFromUnixTimestamp(date) {\n  let nextPaymentAttemptDate = new Date(date * 1000);\n  let day = nextPaymentAttemptDate.getDate();\n  let month = nextPaymentAttemptDate.getMonth() + 1;\n  let year = nextPaymentAttemptDate.getFullYear();\n  return month + '/' + day + '/' + year;\n}\n\nfunction PriceChangeForm({\n  customerId,\n  subscriptionId,\n  currentProductSelected,\n  newProductSelected,\n  setShowChangePriceForm,\n  setSelectedProduct\n}) {\n  let [invoicePreview, setInvoicePreview] = useState({});\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch('/retrieve-upcoming-invoice', {\n        method: 'post',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          customerId: customerId,\n          subscriptionId: subscriptionId,\n          newPriceId: newProductSelected.toUpperCase()\n        })\n      });\n      const responseBody = await response.json();\n      setInvoicePreview(responseBody);\n    }\n\n    fetchData();\n  }, [customerId, subscriptionId, newProductSelected]);\n\n  function confirmPriceChange() {\n    return fetch('/update-subscription', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        subscriptionId: subscriptionId,\n        newPriceId: newProductSelected.toUpperCase()\n      })\n    }).then(response => {\n      return response.json();\n    }).then(result => {\n      setSelectedProduct(newProductSelected);\n      setShowChangePriceForm(false); // props.history.push('/prices?customerId=' + customer.id);\n    });\n  }\n\n  function cancelPriceChange() {\n    setShowChangePriceForm(false);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, newProductSelected !== currentProductSelected ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-full rounded overflow-hidden border rounded-md p-4 mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex justify-between text-gray-600 text-m\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"Current price\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"font-bold text-m\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, currentProductSelected)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex justify-between text-gray-600 text-m\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"New price\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"font-bold text-m\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, newProductSelected)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mt-4 mb-4 text-gray-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"You will be charged \", console.log(invoicePreview), invoicePreview && getFormattedAmount(invoicePreview.amount_due) || '', ' ', \"on\", ' ', /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, invoicePreview.next_payment_attempt && getDateStringFromUnixTimestamp(invoicePreview.next_payment_attempt) || '')), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => confirmPriceChange(),\n    className: \"bg-pasha hover:bg-white hover:shadow-outline hover:text-pasha hover:border hover:border-black focus:shadow-outline text-white focus:bg-white focus:text-pasha font-light py-2 px-4 rounded-lg mr-2\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-auto -mx-2 md:mx-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, \"Confirm change\"))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => cancelPriceChange(),\n    className: \"bg-pasha hover:bg-white hover:shadow-outline hover:text-pasha hover:border hover:border-black focus:shadow-outline text-white focus:bg-white focus:text-pasha font-light py-2 px-4 rounded-lg\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-auto -mx-2 md:mx-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, \"Cancel\"))))) : null);\n}\n\nexport default withRouter(PriceChangeForm);","map":{"version":3,"sources":["/Users/ageorgiou/Projects/ascfed/react/src/PriceChangeForm.js"],"names":["React","useState","useEffect","withRouter","getFormattedAmount","amount","amountToFormat","numberFormat","Intl","NumberFormat","style","currency","currencyDisplay","parts","formatToParts","zeroDecimalCurrency","part","type","formattedAmount","format","console","log","getDateStringFromUnixTimestamp","date","nextPaymentAttemptDate","Date","day","getDate","month","getMonth","year","getFullYear","PriceChangeForm","customerId","subscriptionId","currentProductSelected","newProductSelected","setShowChangePriceForm","setSelectedProduct","invoicePreview","setInvoicePreview","fetchData","response","fetch","method","headers","body","JSON","stringify","newPriceId","toUpperCase","responseBody","json","confirmPriceChange","then","result","cancelPriceChange","amount_due","next_payment_attempt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nfunction getFormattedAmount(amount) {\n  // Format price details and detect zero decimal currencies\n  let amountToFormat = amount;\n  let numberFormat = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    currencyDisplay: 'symbol',\n  });\n  let parts = numberFormat.formatToParts(amountToFormat);\n  let zeroDecimalCurrency = true;\n  for (let part of parts) {\n    if (part.type === 'decimal') {\n      zeroDecimalCurrency = false;\n    }\n  }\n  amountToFormat = zeroDecimalCurrency ? amount : amount / 100;\n  let formattedAmount = numberFormat.format(amountToFormat);\n  console.log(formattedAmount);\n\n  return formattedAmount;\n}\n\nfunction getDateStringFromUnixTimestamp(date) {\n  let nextPaymentAttemptDate = new Date(date * 1000);\n  let day = nextPaymentAttemptDate.getDate();\n  let month = nextPaymentAttemptDate.getMonth() + 1;\n  let year = nextPaymentAttemptDate.getFullYear();\n\n  return month + '/' + day + '/' + year;\n}\n\nfunction PriceChangeForm({\n  customerId,\n  subscriptionId,\n  currentProductSelected,\n  newProductSelected,\n  setShowChangePriceForm,\n  setSelectedProduct,\n}) {\n  let [invoicePreview, setInvoicePreview] = useState({});\n\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch('/retrieve-upcoming-invoice', {\n        method: 'post',\n        headers: {\n          'Content-type': 'application/json',\n        },\n        body: JSON.stringify({\n          customerId: customerId,\n          subscriptionId: subscriptionId,\n          newPriceId: newProductSelected.toUpperCase(),\n        }),\n      });\n      const responseBody = await response.json();\n\n      setInvoicePreview(responseBody);\n    }\n    fetchData();\n  }, [customerId, subscriptionId, newProductSelected]);\n\n  function confirmPriceChange() {\n    return fetch('/update-subscription', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        subscriptionId: subscriptionId,\n        newPriceId: newProductSelected.toUpperCase(),\n      }),\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((result) => {\n        setSelectedProduct(newProductSelected);\n        setShowChangePriceForm(false);\n        // props.history.push('/prices?customerId=' + customer.id);\n      });\n  }\n\n  function cancelPriceChange() {\n    setShowChangePriceForm(false);\n  }\n\n  return (\n    <div className=\"flex justify-center\">\n      {newProductSelected !== currentProductSelected ? (\n        <div className=\"w-full rounded overflow-hidden border rounded-md p-4 mb-4\">\n          <div className=\"flex justify-between text-gray-600 text-m\">\n            <div>Current price</div>\n            <div className=\"font-bold text-m\">{currentProductSelected}</div>\n          </div>\n\n          <div className=\"flex justify-between text-gray-600 text-m\">\n            <div>New price</div>\n            <div className=\"font-bold text-m\">{newProductSelected}</div>\n          </div>\n\n          <div>\n            <p className=\"mt-4 mb-4 text-gray-600\">\n              You will be charged {console.log(invoicePreview)}\n              {(invoicePreview &&\n                getFormattedAmount(invoicePreview.amount_due)) ||\n                ''}{' '}\n              on{' '}\n              <span>\n                {(invoicePreview.next_payment_attempt &&\n                  getDateStringFromUnixTimestamp(\n                    invoicePreview.next_payment_attempt\n                  )) ||\n                  ''}\n              </span>\n            </p>\n            <button\n              onClick={() => confirmPriceChange()}\n              className=\"bg-pasha hover:bg-white hover:shadow-outline hover:text-pasha hover:border hover:border-black focus:shadow-outline text-white focus:bg-white focus:text-pasha font-light py-2 px-4 rounded-lg mr-2\"\n              type=\"submit\"\n            >\n              <div className=\"w-auto -mx-2 md:mx-0\">\n                <span>Confirm change</span>\n              </div>\n            </button>\n            <button\n              onClick={() => cancelPriceChange()}\n              className=\"bg-pasha hover:bg-white hover:shadow-outline hover:text-pasha hover:border hover:border-black focus:shadow-outline text-white focus:bg-white focus:text-pasha font-light py-2 px-4 rounded-lg\"\n              type=\"submit\"\n            >\n              <div className=\"w-auto -mx-2 md:mx-0\">\n                <span>Cancel</span>\n              </div>\n            </button>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default withRouter(PriceChangeForm);\n"]},"metadata":{},"sourceType":"module"}